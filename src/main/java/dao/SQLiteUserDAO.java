package dao;

import dao.db.SQLiteSingletonConnection;
import entities.User;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;

import javax.swing.plaf.nimbus.State;
import java.sql.*;

/**
 * Created by Eugen on 22.08.2017.
 */
public class SQLiteUserDAO implements UserDAO{

    private static final Logger logger = LogManager.getLogger(SQLiteUserDAO.class);
    private Connection con = null;


    public SQLiteUserDAO() throws DAOException{
        con = SQLiteSingletonConnection.getConnection();
        logger.debug("Successfully connected to the database");
    }

    public User create(User user) throws DAOException{
        logger.debug("Entering the user create method and trying to insert the user: " + user);
        checkIfUserIsNotNull(user);
       // con = SQLiteSingletonConnection.reconnectIfConnectionToDatabaseLost();
        try{
            PreparedStatement stmt = con.prepareStatement("" +
                    "INSERT INTO User(name,password,email) VALUES (?,?,?)");
            stmt.setString(1, user.getName());
            stmt.setString(2, user.getPassword());
            stmt.setString(3, user.getEmail());
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            rs.next();
            user.setId(rs.getInt(1));
            con.commit();
            rs.close();
            stmt.close();
            logger.info("User "+ user + " inserted successfully");
        } catch (SQLException e){
            logger.debug(e.getMessage());
            throw new DAOException(e.getMessage());
        }
        return user;
    }

    public User selectUser(String name, String password) throws DAOException{
        logger.debug("Entering the user selection method with name: " + name + " password: " + password);
       // con = SQLiteSingletonConnection.reconnectIfConnectionToDatabaseLost();
        User user = null;
        try{
            String sql = "SELECT * FROM User WHERE name=? AND password=?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1,name);
            pstmt.setString(2,password);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                int id = rs.getInt(1);
                String name1 = rs.getString(2);
                String password1 = rs.getString(3);
                String email = rs.getString(4);
                user = new User(id, name1, password1,email,false);
            }
            rs.close();
            pstmt.close();
            return user;
        } catch(SQLException e){
            logger.debug(e.getMessage());
            throw new DAOException(e.getMessage());
        }
    }

    private void checkIfUserIsNotNull(User user) throws DAOException{
        if(user == null){
            logger.debug("User is null");
            throw new DAOException("User cannot be null");
        }
    }

}
