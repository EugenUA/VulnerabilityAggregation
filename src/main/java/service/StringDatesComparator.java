package service;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;

public class StringDatesComparator {

    private final static Logger logger = LogManager.getLogger(StringDatesComparator.class);

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    public boolean date_is_today(String date1){
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DATE, 1);
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        String formatted = format1.format(cal.getTime());

        try{
            Date date_one = sdf.parse(date1);
            Date date_two = sdf.parse(formatted);

            if(!date_one.after(date_two) && !date_one.before(date_two)){
                return true;
            }

        } catch(ParseException e){
            logger.debug(e.getMessage());
        }
        return false;
    }

    public boolean date1_equal_date2(String date1, String date2){
        try {
            Date date_one = sdf.parse(date1);
            Date date_two = sdf.parse(date2);

            if(!date_one.after(date_two) && !date_one.before(date_two)){
                return true;
            }

        } catch(ParseException e){
            logger.debug(e.getMessage());
        }
        return false;
    }

    public boolean date1_less_than_date2(String date1, String date2){
        try {
            Date date_one = sdf.parse(date1);
            Date date_two = sdf.parse(date2);

            if(date_one.before(date_two)){
                return true;
            }

        } catch(ParseException e){
            logger.debug(e.getMessage());
        }
        return false;
    }


    public boolean date1_bigger_than_date2(String date1, String date2) {
        try {
            Date date_one = sdf.parse(date1);
            Date date_two = sdf.parse(date2);

            if(date_one.after(date_two)){
                return true;
            }

        } catch(ParseException e){
            logger.debug(e.getMessage());
        }
        return false;
    }
}
