package service.vulnerabilities_sources.RSSFeed;

import java.io.IOException;
import java.net.*;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.sun.syndication.feed.synd.SyndEntry;
import com.sun.syndication.feed.synd.SyndFeed;
import com.sun.syndication.io.FeedException;
import com.sun.syndication.io.SyndFeedInput;
import com.sun.syndication.io.XmlReader;
import entities.programEntities.AggregationEntities.RSSAlert;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import service.ServiceException;
import service.StringDatesComparator;


/**
 * Created by Eugen on 07.09.2017.
 */
public class ParseRSSFeed {

    private final static Logger logger = LogManager.getLogger(ParseRSSFeed.class);
    private ArrayList<RSSAlert> rssAlerts = new ArrayList<RSSAlert>();
    private String lastLoginDate;
    private StringDatesComparator datesComparator = new StringDatesComparator();

    public ParseRSSFeed(String lastLoginDate){
        this.lastLoginDate = lastLoginDate;
    }

    public ArrayList<RSSAlert> getAlerts() {
        return rssAlerts;
    }

    public void parseRSSSources(List<String> sources) throws ServiceException{
        for(String eachSource : sources){
            readRSS(eachSource);
        }
    }

    private void readRSS(String feedURL) throws ServiceException {
        try{
            URL feedUrl = new URL(feedURL);

            SyndFeedInput input = new SyndFeedInput();
            SyndFeed feed = input.build(new XmlReader(feedUrl));

            for (Iterator i = feed.getEntries().iterator(); i.hasNext();) {
                SyndEntry entry = (SyndEntry) i.next();

                RSSAlert rssAlert = new RSSAlert();

                rssAlert.setOrigin(feed.getTitle());
                rssAlert.setTitle(entry.getTitle());
                rssAlert.setDescription(entry.getDescription().getValue());
                rssAlert.setLink(entry.getLink());
                rssAlert.setPubDate(entry.getPublishedDate().toString());

                rssAlerts.add(rssAlert);

                /*if(rssAlerts.size() > 10){
                    break;
                }*/
            }

        } catch(MalformedURLException e){
            logger.debug(e.getMessage());
            throw new ServiceException(e.getMessage());
        } catch(IOException e){
            logger.debug(e.getMessage());
            throw new ServiceException(e.getMessage());
        } catch(FeedException e){
            logger.debug(e.getMessage());
            throw new ServiceException(e.getMessage());
        }
    }

}
